-- Roles & Users
CREATE TABLE role (
  role_id       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  name          VARCHAR2(30) NOT NULL UNIQUE
);

CREATE TABLE user_account (
  user_id       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  role_id       NUMBER NOT NULL,
  email         VARCHAR2(255) NOT NULL UNIQUE,
  password_hash VARCHAR2(255) NOT NULL,
  first_name    VARCHAR2(100) NOT NULL,
  last_name     VARCHAR2(100) NOT NULL,
  status        VARCHAR2(20)  DEFAULT 'active' CHECK (status IN ('active','suspended')),
  created_at    TIMESTAMP DEFAULT SYSTIMESTAMP,
  updated_at    TIMESTAMP
);

CREATE TABLE student_profile (
  user_id        NUMBER PRIMARY KEY,
  student_number VARCHAR2(50) NOT NULL UNIQUE,
  program_name   VARCHAR2(200),
  cohort_year    NUMBER(4)
);

CREATE TABLE instructor_profile (
  user_id     NUMBER PRIMARY KEY,
  department  VARCHAR2(200),
  title       VARCHAR2(200)
);

-- Courses / Sections / Enrollment
CREATE TABLE course (
  course_id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  course_code   VARCHAR2(50) NOT NULL,
  course_name   VARCHAR2(200) NOT NULL,
  term          VARCHAR2(20),
  credit_hours  NUMBER
);

CREATE TABLE section (
  section_id            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  course_id             NUMBER NOT NULL,
  section_code          VARCHAR2(50) NOT NULL,
  term                  VARCHAR2(20),
  primary_instructor_id NUMBER NOT NULL
);

CREATE TABLE enrollment (
  enrollment_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  section_id    NUMBER NOT NULL,
  student_id    NUMBER NOT NULL,
  enrolled_on   DATE DEFAULT SYSDATE,
  status        VARCHAR2(20) DEFAULT 'enrolled' CHECK (status IN ('enrolled','dropped','completed')),
  CONSTRAINT uq_enrollment UNIQUE (section_id, student_id)
);

-- Core tracking record (NO foreign key to locations)
CREATE TABLE time_session (
  session_id     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  user_id        NUMBER NOT NULL,                        -- student
  session_type   VARCHAR2(20) NOT NULL CHECK (session_type IN ('Class','Study','Clinical')),
  -- Free-text/choice label instead of FK:
  location_text  VARCHAR2(200),                          -- optional, e.g. "Library Zone A" or "Clinic â€“ Room 12"
  section_id     NUMBER,                                 -- required if session_type='Class'
  clock_in_at    TIMESTAMP NOT NULL,
  clock_out_at   TIMESTAMP,
  duration_minutes GENERATED ALWAYS AS (
    CASE WHEN clock_out_at IS NOT NULL
         THEN ROUND( (CAST(clock_out_at AS DATE) - CAST(clock_in_at AS DATE)) * 24 * 60 )
    END
  ) VIRTUAL,
  source         VARCHAR2(20) DEFAULT 'web' CHECK (source IN ('web','mobile','kiosk','admin_edit')),
  status         VARCHAR2(20) DEFAULT 'open' CHECK (status IN ('open','closed','flagged')),
  notes          VARCHAR2(1000),
  created_at     TIMESTAMP DEFAULT SYSTIMESTAMP,
  updated_at     TIMESTAMP
);

-- Audit
CREATE TABLE audit_log (
  audit_id       NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  actor_user_id  NUMBER NOT NULL,
  target_table   VARCHAR2(50) NOT NULL,
  target_pk      VARCHAR2(100) NOT NULL,
  action         VARCHAR2(10) NOT NULL CHECK (action IN ('INSERT','UPDATE','DELETE')),
  before_json    CLOB,
  after_json     CLOB,
  reason         VARCHAR2(500),
  created_at     TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- Optional permissions
CREATE TABLE permission (
  permission_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  code          VARCHAR2(60) NOT NULL UNIQUE,
  description   VARCHAR2(400)
);

CREATE TABLE role_permission (
  role_id       NUMBER NOT NULL,
  permission_id NUMBER NOT NULL,
  CONSTRAINT pk_role_permission PRIMARY KEY (role_id, permission_id)
);
